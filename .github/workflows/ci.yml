name: Tests

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      use_node:
        type: boolean
        required: false
        default: false
    secrets:
      master_key:
        required: true
      bundle_token:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: ${{ inputs.app_name }}_test
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports: ['6379:6379']
        options: --entrypoint redis-server
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends libvips
      - name: Set up Node
        if: ${{ inputs.use_node == true }}
        uses: actions/setup-node@v4
        with:
          node-version-file: '.node-version'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        env:
          BUNDLE_GITHUB__COM: x-access-token:${{ secrets.bundle_token }}
        with:
          bundler-cache: true
      - name: Copy .env sample
        run: |
          cp .env.example .env
      - name: Cache bootsnap
        uses: actions/cache@v4
        with:
          path: tmp/cache
          key: ${{ runner.os }}-bootsnap-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bootsnap-
      - name: Setup test database
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.master_key }}
        run: |
          bin/rails db:create
          bin/rails db:schema:load
          bin/rails db:migrate
      - name: Cache node_modules
        if: ${{ inputs.use_node == true }}
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('.node-version') }}
          restore-keys: |
            ${{ runner.os }}-modules-
      - name: Install dependencies
        if: ${{ inputs.use_node == true }}
        run: yarn install --frozen-lockfile --prefer-offline --no-progress
      - name: Precompile assets
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.master_key }}
        run: bin/rails assets:precompile
      - name: Run tests
        timeout-minutes: 15
        env:
          NODE_OPTIONS: --openssl-legacy-provider
          REDIS_URL: redis://localhost:6379/0
          RAILS_MASTER_KEY: ${{ secrets.master_key }}
        run: |
          bin/rails test:all
      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: /home/runner/work/${{ inputs.app_name }}/${{ inputs.app_name }}/tmp/screenshots/
